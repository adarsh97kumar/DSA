class Solution {
public:
    vector<string> ans;
    int open=0, close=0;

    bool isValid(string s)
    {
        //cout<<s<<"   ";
        int sum = 0;
        for(char c : s)
        {
            if(c=='(')
                sum += 1;
            else
                sum -= 1;
            
            if(sum<0)
                return false;
        }

        if(sum==0)
            return true;
        
        return false;
    }

    void solve(string& s, int n)
    {
        if(s.size() == n*2)
        {
            if(isValid(s))
                ans.push_back(s);

            return;
        }

        if(open < n)
        {
            s.push_back('(');
            open++;
            solve(s, n);
            s.pop_back();
            open--;
        }
        
        if(close < open)
        {
            s.push_back(')');
            close++;
            solve(s, n);
            s.pop_back();
            close--;
        }
        
    }

    vector<string> generateParenthesis(int n) {
        string s = "";
        solve(s, n);
        return ans;
    }
};
